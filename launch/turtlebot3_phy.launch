<launch>
    <!-- MACHINE PARAMETERS -->
    <arg name="robot_name" default="tb3-three"/>
    <arg name="machine_host" default="tb3-three"/>
    <arg name="machine_username" default="actlab"/>
    <arg name="machine_password" default="uscdrone"/>
    <arg name="env_loader_path" default="/home/odroid/env-loader.sh"/>

    <arg name="robot_frame" default="tb3-three"/>
    <arg name="parent_frame" default="world"/>

    <!-- ONLY ORIGINAL TRAJECTORY IS READ FROM HERE -->
    <arg name="robot_description_path" default="/home/baskin/rlss_ws/src/rlss-ros/third_party/rlss/examples/inputs/demo_descriptions/3d/hetero/turtlebot_1.json"/>

    <!-- COMMANDER PARAMETERS -->
    <arg name="commander_dt" default="0.05"/>

    <!-- OBSTACLE FEEDER PARAMETERS -->
    <arg name="obstacles_directory" default="/home/baskin/rlss_ws/src/rlss-ros/third_party/rlss/examples/inputs/obstacle_descriptions/2d/empty/"/>
    <arg name="occupancy_grid_step_size" default="[0.5, 0.5]"/>


    <!-- PLANNER PARAMETERS -->
    <arg name="robot_idx" default="1"/>
    <arg name="continuity_upto_degree" default="2"/> <!-- used in commander as well -->
    <arg name="replanning_period" default="0.1"/>
    <arg name="maximum_derivative_magnitude_degrees" default="[1, 2]"/>
    <arg name="maximum_derivative_magnitude_magnitudes" default="[0.22, 0.5]"/>
    <arg name="workspace_min" default="[-10, -10]"/>
    <arg name="workspace_max" default="[10, 10]"/>
    <arg name="collision_shape_at_zero_min" default="[-0.2, -0.2]"/>
    <arg name="collision_shape_at_zero_max" default="[0.2, 0.2]"/>
    <arg name="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/initial_point_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/continuity_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value" default="10000"/>
    <arg name="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value" default="1000000"/>
    <arg name="soft_optimization_parameters/initial_point_constraints_value" default="100000"/>
    <arg name="soft_optimization_parameters/continuity_constraints_value" default="1000"/>
    <arg name="optimization_obstacle_check_distance" default="0.5"/>
    <arg name="optimizer" default="rlss-hard-soft"/>
    <arg name="piece_endpoint_cost_weights" default="[4, 8, 16, 32]"/>
    <arg name="integrated_squared_derivative_weight_degrees" default="[1, 2]"/>
    <arg name="integrated_squared_derivative_weight_weights" default="[1.0, 0.8]"/>
    <arg name="desired_time_horizon" default="5.0"/>
    <arg name="max_rescaling_count" default="6"/>
    <arg name="rescaling_multiplier" default="1.2"/>
    <arg name="search_step" default="0.01"/>
    <arg name="num_bezier_control_points" default="[8, 8, 8, 8]"/>


    <rosparam param="obstacles_directory" subst_value="True">$(arg obstacles_directory)</rosparam>
    <rosparam param="occupancy_grid_step_size" subst_value="True">$(arg occupancy_grid_step_size)</rosparam>
    <rosparam param="robot_idx" subst_value="True">$(arg robot_idx)</rosparam>
    <rosparam param="continuity_upto_degree" subst_value="True">$(arg continuity_upto_degree)</rosparam>
    <rosparam param="replanning_period" subst_value="True">$(arg replanning_period)</rosparam>
    <rosparam param="maximum_derivative_magnitude_degrees" subst_value="True">$(arg maximum_derivative_magnitude_degrees)</rosparam>
    <rosparam param="maximum_derivative_magnitude_magnitudes" subst_value="True">$(arg maximum_derivative_magnitude_magnitudes)</rosparam>
    <rosparam param="workspace_min" subst_value="True">$(arg workspace_min)</rosparam>
    <rosparam param="workspace_max" subst_value="True">$(arg workspace_max)</rosparam>
    <rosparam param="collision_shape_at_zero_min" subst_value="True">$(arg collision_shape_at_zero_min)</rosparam>
    <rosparam param="collision_shape_at_zero_max" subst_value="True">$(arg collision_shape_at_zero_max)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/initial_point_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/initial_point_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/continuity_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/continuity_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value" subst_value="True">$(arg soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value" subst_value="True">$(arg soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/initial_point_constraints_value" subst_value="True">$(arg soft_optimization_parameters/initial_point_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/continuity_constraints_value" subst_value="True">$(arg soft_optimization_parameters/continuity_constraints_value)</rosparam>
    <rosparam param="optimization_obstacle_check_distance" subst_value="True">$(arg optimization_obstacle_check_distance)</rosparam>
    <rosparam param="optimizer" subst_value="True">$(arg optimizer)</rosparam>
    <rosparam param="piece_endpoint_cost_weights" subst_value="True">$(arg piece_endpoint_cost_weights)</rosparam>
    <rosparam param="integrated_squared_derivative_weight_degrees" subst_value="True">$(arg integrated_squared_derivative_weight_degrees)</rosparam>
    <rosparam param="integrated_squared_derivative_weight_weights" subst_value="True">$(arg integrated_squared_derivative_weight_weights)</rosparam>
    <rosparam param="desired_time_horizon" subst_value="True">$(arg desired_time_horizon)</rosparam>
    <rosparam param="max_rescaling_count" subst_value="True">$(arg max_rescaling_count)</rosparam>
    <rosparam param="rescaling_multiplier" subst_value="True">$(arg rescaling_multiplier)</rosparam>
    <rosparam param="search_step" subst_value="True">$(arg search_step)</rosparam>
    <rosparam param="num_bezier_control_points" subst_value="True">$(arg num_bezier_control_points)</rosparam>
    <rosparam param="commander_dt" subst_value="True">$(arg commander_dt)</rosparam>
    <rosparam param="robot_description_path" subst_value="True">$(arg robot_description_path)</rosparam>
    <rosparam param="robot_frame" subst_value="True">$(arg robot_frame)</rosparam>
    <rosparam param="parent_frame" subst_value="True">$(arg parent_frame)</rosparam>


    <machine
        name="$(arg robot_name)"
        address="$(arg machine_host)"
        user="$(arg machine_username)"
        password="$(arg machine_password)"
        env-loader="$(arg env_loader_path)"
    >
    </machine>

    <node machine="$(arg robot_name)" pkg="rosserial_python" type="serial_node.py" name="turtlebot3_core" output="screen">
        <param name="port" value="/dev/ttyACM0"/>
        <param name="baud" value="115200"/>
        <param name="tf_prefix" value=""/>
    </node>

    <node machine="$(arg robot_name)" pkg="hls_lfcd_lds_driver" type="hlds_laser_publisher" name="turtlebot3_lds" output="screen">
        <param name="port" value="/dev/ttyUSB0"/>
        <param name="frame_id" value="base_scan"/>
    </node>

    <node machine="$(arg robot_name)" pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen"/>

    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    </include>

    <node name="controller" pkg="create2_controller" type="trajectory_controller_v2" output="screen">
        <param name="frame" value="$(arg robot_frame)" />
        <param name="parentFrame" value="$(arg parent_frame)" />
        <param name="Kx" value="10.0" />
        <param name="Ky" value="10.0" />
        <param name="Ktheta" value="25.0"/>
    </node>


    <node pkg="rlss_ros" name="static_occupancy_grid_feeder" type="static_occupancy_grid_feeder_2d">
    </node>

    <node pkg="rlss_ros" name="planner" type="planner_2d" required="true" output="screen">
    </node>

    <node pkg="rlss_ros" name="commander" type="commander_2d" required="true" output="screen">
    </node>

    <node pkg="rlss_ros" name="reducer" type="create2_state_reducer" required="true" output="screen">
    </node>

    <node name="localizer" pkg="rlss_ros" type="create2_localizer_2d" output="screen" required="true">
    </node>

    <node name="desired_traj_feeder" pkg="rlss_ros" type="static_desired_trajectory_feeder_2d" required="true" output="screen">
    </node>

</launch>