#! /usr/bin/env python

PACKAGE='rlss_ros'

import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

trajectory_enum = gen.enum([gen.const("hover", 		int_t, 	0, 	"Hover at current spot"),
				gen.const("user", 		int_t, 	1, 	"Defined by user with (x_d, y_d, z_d)"),
				], "Trajectory target")

solver_enum = gen.enum([gen.const("soft_hard", 		int_t, 	0, 	"rlss soft-hard"),
				gen.const("soft", 		int_t, 	1, 	"rlss soft"),
				gen.const("hard", 		int_t, 	2, 	"rlss hard"),
				], "Solver")



#       	Name		Type      	Level	Description			Default 	Min	Max 	Values

# Trajectory Target
gen.add(	"trajectory_target", 	int_t,		0,	"Trajectory target",		1,		0,	1,	edit_method=trajectory_enum)

gen.add(	"x_0",   	double_t,	2,    	"Target x_1 position",		5,		-7,	20)
gen.add(	"y_0",   	double_t,    	2,    	"Target y_1 position",		0,		-7,	20)
gen.add(	"z_0", 		double_t,    	2,    	"Target z_1 position", 		1.5,		0,	3)

gen.add(	"x_1",   	double_t,	2,    	"Target x_2 position",		5,		-7,	20)
gen.add(	"y_1",   	double_t,    	2,    	"Target y_2 position",		0,		-7,	20)
gen.add(	"z_1", 		double_t,    	2,    	"Target z_2 position", 		1.5,		0,	3)

# Dynamic Planner Params
gen.add(	"reach_distance",   	double_t,	2,    	"Reach distance",		0.5,		0,	3)
gen.add(	"solver_type",   	int_t,	2,    	"Solver type",		0,		0,	2, edit_method=solver_enum)
gen.add(	"optimization_obstacle_check_distance",   	double_t,	2,    	"Optimization obstacle check distance",		0.5,		0,	3.0)
gen.add(	"number_of_drones",   	int_t,	2,    	"No.of drones",		2,		1,	10)

# Dynamic and state
gen.add(	"rescaling_factor",   	double_t,	2,    	"Rescaling factor",		1.2,	0,	3)
gen.add(	"intended_velocity",   	double_t,	1,    	"Intended velocity", 	1,		0,	10)

# gen.add(	"duration",   	double_t,	2,    	"Duration",		15,		0,	20)
# gen.add(	"duration",   	double_t,	1,    	"Trajectory size", 		1,		1,	10) duration = euclid dist / velocity 

# gen.add(	"yaw_d", 	double_t,    	2,    	"Desired yaw orientation", 	0,		0,	360)

exit(gen.generate(PACKAGE, "rlss_ros", "setTargets"))
